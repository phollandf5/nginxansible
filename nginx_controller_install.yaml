## on the remote host
- remote_user: ubuntu
  become: yes
  become_method: sudo
  gather_facts: yes

  # Supporting su requirement for Controller installer role
- name: set root password to support su for Controller installation with Ubuntu
  user:
    name: root
    password: "{{ su_password | password_hash('sha512') }}"

- name: copy the controller tar archive to the remote host
  copy:
    src: "{{playbook_dir}}/{{nginx_controller_tarball}}"
    dest: "{{ ansible_env.HOME }}/{{nginx_controller_tarball}}"
    owner: ubuntu
    group: ubuntu
    force: yes
  vars:
    nginx_controller_install_path: "{{ ansible_env.HOME }}"
    nginx_controller_tarball: "controller-installer-<>.tar.gz"

- name:  make sure all the prerequisites are present on the remote
  apt:
    name: "{{ packages }}"
    state: present
    update_cache: yes
  vars:
    packages:
    - gettext
    - bash
    - gzip
    - coreutils
    - grep
    - less
    - sed
    - tar
    - python-pexpect  # to support ansible
    - nfs-common  # to support nfs remote volume
  tags: packages

## changing security context on the remote host to su to run the installer
- name: install controller
  remote_user: ubuntu
  hosts: controller
  become: yes
  become_user: ubuntu
  become_method: su  # note that the become method is required to be su, you will need to support that for your distribution.
  gather_facts: false

roles:
  - nginxinc.nginx_controller_install

vars:
  - nginx_controller_tarball: "{{ ansible_env.HOME }}/{{nginx_controller_tarball}}"
  - nginx_controller_install_path: /usr/ubuntu
  - nginx_controller_db_host: dbhost.example.com
  - nginx_controller_db_user: "naas"
  - nginx_controller_db_password: ''
  - nginx_controller_db_enable_ssl: false
  - nginx_controller_tsdb_volume_type: nfs
  - nginx_controller_tsdb_nfs_path: "/controllerdb"
  - nginx_controller_tsdb_nfs_host: storage.internal
  - nginx_controller_smtp_host: "localhost"
  - nginx_controller_smtp_authentication: false
  - nginx_controller_smtp_use_tls: false
  - nginx_controller_noreply_address: "noreply@example.com"
  - nginx_controller_fqdn:  controller.example.com
  - nginx_controller_organization_name: "Example"
  - nginx_controller_admin_firstname: "Firstname"
  - nginx_controller_admin_lastname: "Lastname"
  - nginx_controller_admin_email: "firstname@example.com"
  - nginx_controller_admin_password: ''
  - nginx_controller_self_signed_cert: true
  - nginx_controller_overwrite_existing_configs: true
  - ansible_python_interpreter: /usr/bin/python3
  - ansible_become_password: '<some secure password>'
